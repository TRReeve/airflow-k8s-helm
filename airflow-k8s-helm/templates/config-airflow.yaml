apiVersion: v1
kind: ConfigMap
metadata:
  name: airflow-config
  namespace: {{ .Release.Namespace}}
data:
  AIRFLOW__CORE__EXECUTOR: KubernetesExecutor
  AIRFLOW__KUBERNETES__WORKER_CONTAINER_REPOSITORY: {{ .Values.airflow.image.repository | quote}}
  AIRFLOW__WEBSERVER__LOG_FETCH_TIMEOUT_SEC: {{ 10 | quote}}
  AIRFLOW__KUBERNETES__WORKER_CONTAINER_TAG: {{ .Values.airflow.image.tag}}
  AIRFLOW__KUBERNETES__WORKER_PODS_CREATION_BATCH: {{ .Values.airflow.worker.podsPerHeartbeat | quote}}
  AIRFLOW__KUBERNETES__NAMESPACE: {{ .Release.Namespace }}
  AIRFLOW__CORE__SQL_ALCHEMY_CONN: "{{.Values.airflow.db.protocol}}://{{ .Values.airflow.db.username }}:$DB_PASSWORD@$DB_HOST:{{ .Values.airflow.db.port }}/{{.Values.airflow.db.dbname}}"
  AIRFLOW__KUBERNETES__DAGS_IN_IMAGE: "True"
  AIRFLOW__KUBERNETES__IN_CLUSTER: "True"
  AIRFLOW__KUBERNETES__KUBE_CLIENT_REQUEST_ARGS: '{"_request_timeout" : [60,60] }'
  {{ if .Values.airflow.webserver.ingress.enable}}
  INGRESS_HOST: {{ .Values.airflow.webserver.ingress.host }}
  {{- end }}
  {{/*  IF EXAMPLE DAGS ENABLED */}}
  {{- if .Values.airflow.exampleDags.enable}}
  AIRFLOW__CORE__LOAD_EXAMPLES: "True"
  {{ else }}
  AIRFLOW__CORE__LOAD_EXAMPLES: "False"
  {{- end }}
{{/*CUSTOM VARIABLES*/}}
{{- range $key, $value := .Values.airflow.envVars }}
  {{ $key }}: {{ $value | quote}}
{{- end}}