{{ if .Values.airflow.webserver.enable }}
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ .Release.Name }}-webserver
  labels:
    app: "airflow-cluster"
    component: webserver
spec:
  replicas: {{ .Values.airflow.webserver.replicas }}
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: "airflow-cluster"
      component: webserver
  template:
    metadata:
      labels:
        app: "airflow-cluster"
        component: webserver
      annotations:
        # Forces a redeploy on any upgrade.
        force_redeploy: {{ randAscii 10 | quote }}
    spec:
      serviceAccountName: "airflow"
      containers:
        - name: webserver
          readinessProbe:
            initialDelaySeconds: 30
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080

          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            httpGet:
              path: /health
              port: 8080
          image: {{ .Values.images.core.repository }}:{{ .Values.images.core.tag}}
          ports:
            - containerPort: 8080
              name: webserveruiport
          command:
            - sh
            - /entrypoint.sh
            - webserver
          envFrom:
            - configMapRef:
                name: "airflow-config"
            - configMapRef:
                name: "worker-config"
            - configMapRef:
                name: "logging-config"
            - secretRef:
                name: "logging-secrets"
          env:
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.airflow.secrets.secret_file | default "airflow-secrets-default"}}
                  key: DB_PASSWORD
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.airflow.secrets.secret_file| default "airflow-secrets-default"}}
                  key: DB_HOST
            {{- if .Values.airflow.remote_logging.enable}}
            - name: AIRFLOW_CONN_{{ .Values.airflow.remote_logging.conn_name | upper}}
              value: "{{ .Values.airflow.remote_logging.conn_type | lower}}://$(REMOTE_LOGGING_SECRET)@{{ .Values.airflow.remote_logging.remote_logs_path}}"
            - name: AIRFLOW__KUBERNETES_ENVIRONMENT_VARIABLES__AIRFLOW_CONN_{{ .Values.airflow.remote_logging.conn_name | upper}}
              value: "{{ .Values.airflow.remote_logging.conn_type | lower}}://$(REMOTE_LOGGING_SECRET)@{{ .Values.airflow.remote_logging.remote_logs_path}}"
            {{- end }}
            {{-  range $secret_name, $secret_value := .Values.airflow.secrets.extra_secrets}}
            - name: {{ $secret_name }}
              valueFrom:
                secretKeyRef:
                  name: {{ $.Values.airflow.secrets.secret_file| default "airflow-secrets-default"}}
                  key: {{ $secret_name }}
          {{-  end }}
          resources:
            requests:
              cpu: {{ .Values.airflow.webserver.resources.requests.cpu}}
              memory: {{ .Values.airflow.webserver.resources.requests.memory}}
{{ end }}
